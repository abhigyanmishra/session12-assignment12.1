
Apache Flume is a distributed, reliable, and available system for efficiently collecting, aggregating and moving large amounts of log data from many different sources to a centralized data store.
A Flume event is defined as a unit of data flow having a byte payload and an optional set of string attributes. A Flume agent is a  process that hosts the components through which events flow from an external source to the next destination (hop).


Source: A Flume source consumes events delivered to it by an external source like a web Server. The external source sends events to Flume in a format that is recognized by the target Flume source. 
Channel: When a Flume source receives an event, it stores it into one or more channels. The channel is a passive store that keeps the event until it’s consumed by a Flume sink. The file channel is one example – it is backed by the local filesystem. 
Sink: The sink removes the event from the channel and puts it into an external repository like HDFS (via Flume HDFS sink) or forwards it to the Flume source of the next Flume agent (next hop) in the flow. The source and sink within the given agent run asynchronously with the events staged in the channel.
